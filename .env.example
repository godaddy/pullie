# The ID of your GitHub App
APP_ID=

# The URL of your GitHub App
APP_URL=

# The webhook secret
WEBHOOK_SECRET=

# Optionally, you may change where the webhook path is. By default, it will be at the root (i.e. https://myserver.com/).
#WEBHOOK_PATH=/api

# Optionally, you may change where the docs are exposed. By default, it will be at /docs.
#DOCS_PATH=/

# Optionally, you may disable the docs route altogether.
#DISABLE_DOCS_ROUTE=true

# If you load your private key into the same folder as the Pullie code, it will be automatically loaded. Otherwise,
# you may uncomment one of the two lines below to either specify a path for the key, or include the key directly as
# base64.
#PRIVATE_KEY_PATH=/path/to/key.pem
#PRIVATE_KEY=<base64-encoded-key>

# The hostname of the GitHub Enterprise instance (e.g. github.mycompany.com)
GHE_HOST=

# For use with GitHub Enterprise Cloud, you may specify an Enterprise ID to allow. Requests from any repos outside of
# this Enterprise will be ignored. The ID should be the numeric ID of your Enterprise.
#GH_ENTERPRISE_ID=

# You may choose to disable Pullie from running on public repos. This is especially useful when you are using the Jira
# plugin and don't want to expose such information publicly.
#NO_PUBLIC_REPOS=true

# Use `trace` to get verbose logging or `info` to show less
LOG_LEVEL=debug

# Go to https://smee.io/new set this to the URL that you are redirected to.
WEBHOOK_PROXY_URL=

# Jira settings
JIRA_PROTOCOL=https
JIRA_HOST=jira.mycompany.com
JIRA_USERNAME=
JIRA_PASSWORD=

# Optional format specifier for reviewers plugin comment. Can also be configured on a per-repo basis in .pullierc
#REVIEWERS_COMMENT_FORMAT="Hi! I have requested reviews from a few of this repository's maintainers: %s.\n**DO NOT MERGE** this PR without two ✅ reviews (with at least one ✅ from the maintainers)"

# Optional message to greet your new contributors
#WELCOME_MESSAGE="Hey there, thanks for contributing to the project!"

# Optional variable if defined, appends a suffix to the username pulled out from the email address, before checking if the user is a collaborator in the repo.
#GITHUB_USER_SUFFIX="someusernamesuffix"
